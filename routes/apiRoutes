const fs = require("fs");
// You'll need to find a way to give each note a unique id when it's saved (look into npm packages that could do this for you).
const uuid = require("uuid");
const router = require("express").Router();

// GET /api/notes should read the db.json file and return all saved notes as JSON.
router.get("/notes", (req, res) => {
    const data = fs.readFileSync("./db/db.json");
    res.json(JSON.parse(data));
})
// POST /api/notes should receive a new note to save on the request body, add it to the db.json file, and then return the new note to the client. 
router.post("/notes", (req,res) => {
    const notes = JSON.parse(fs.readFileSync('./db/db/json'));
    const addNote = req.body;
    addNote.id = uuid.v4();
    notes.push(addNote);
    fs.writeFileSync("./db/db.json", JSON.stringify(notes));
    res.json(notes);

})
// DELETE /api/notes/:id should receive a query parameter containing the id of a note to delete. In order to delete a note, you'll need to read all notes from the db.json file, remove the note with the given id property, and then rewrite the notes to the db.json file.
router.delete("/notes/:id", (req,res) => {
    const notes = JSON.parse(fs.readFileSync("./db/db.json"));
    const eraseNote = notes.filter((rmvNote) => rmvNote.id !== req.params.id);
    fs.writeFileSync("./db/db.json", JSON.stringify(eraseNote));

    res.json(eraseNote);
})

module.exports = router;